<repository lastmodified='20200403105620.054'>
  <resource id='com.atlassian.tutorial.myPlugin/1.0.0.SNAPSHOT' symbolicname='com.atlassian.tutorial.myPlugin' presentationname='myPlugin' uri='myPlugin-1.0.0-SNAPSHOT.jar' version='1.0.0.SNAPSHOT'>
    <description>This is the com.atlassian.tutorial:myPlugin plugin for Atlassian JIRA.</description>
    <size>11039941</size>
    <documentation>http://www.example.com/</documentation>
    <capability name='bundle'>
      <p n='symbolicname' v='com.atlassian.tutorial.myPlugin'/>
      <p n='presentationname' v='myPlugin'/>
      <p n='version' t='version' v='1.0.0.SNAPSHOT'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.atlassian.tutorial.myPlugin.api'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.context))' extend='false' multiple='false' optional='true'>Import package org.springframework.osgi.context;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.service.exporter.support))' extend='false' multiple='false' optional='true'>Import package org.springframework.osgi.service.exporter.support;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.service.importer.support))' extend='false' multiple='false' optional='true'>Import package org.springframework.osgi.service.importer.support;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.eclipse.gemini.blueprint.context))' extend='false' multiple='false' optional='true'>Import package org.eclipse.gemini.blueprint.context;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.eclipse.gemini.blueprint.service.exporter))' extend='false' multiple='false' optional='true'>Import package org.eclipse.gemini.blueprint.service.exporter;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.eclipse.gemini.blueprint.service.exporter.support))' extend='false' multiple='false' optional='true'>Import package org.eclipse.gemini.blueprint.service.exporter.support;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.eclipse.gemini.blueprint.service.importer.support))' extend='false' multiple='false' optional='true'>Import package org.eclipse.gemini.blueprint.service.importer.support;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=com.atlassian.analytics.api.annotations))' extend='false' multiple='false' optional='true'>Import package com.atlassian.analytics.api.annotations;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=com.atlassian.inject))' extend='false' multiple='false' optional='true'>Import package com.atlassian.inject;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.config))' extend='false' multiple='false' optional='true'>Import package com.atlassian.jira.config;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.issue))' extend='false' multiple='false' optional='true'>Import package com.atlassian.jira.issue;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.issue.fields))' extend='false' multiple='false' optional='true'>Import package com.atlassian.jira.issue.fields;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.security))' extend='false' multiple='false' optional='true'>Import package com.atlassian.jira.security;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=com.atlassian.plugin))' extend='false' multiple='false' optional='true'>Import package com.atlassian.plugin;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=com.atlassian.plugin.event))' extend='false' multiple='false' optional='true'>Import package com.atlassian.plugin.event;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=com.atlassian.plugin.event.events))' extend='false' multiple='false' optional='true'>Import package com.atlassian.plugin.event.events;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=com.atlassian.plugin.osgi.factory))' extend='false' multiple='false' optional='true'>Import package com.atlassian.plugin.osgi.factory;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=com.atlassian.plugin.osgi.factory.descriptor))' extend='false' multiple='false' optional='true'>Import package com.atlassian.plugin.osgi.factory.descriptor;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=com.atlassian.sal.api))' extend='false' multiple='false' optional='true'>Import package com.atlassian.sal.api;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=com.atlassian.sal.api.executor))' extend='false' multiple='false' optional='true'>Import package com.atlassian.sal.api.executor;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=com.atlassian.tutorial.myPlugin.api))' extend='false' multiple='false' optional='true'>Import package com.atlassian.tutorial.myPlugin.api;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=com.sun.xml.fastinfoset.sax))' extend='false' multiple='false' optional='true'>Import package com.sun.xml.fastinfoset.sax;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=com.sun.xml.fastinfoset.stax))' extend='false' multiple='false' optional='true'>Import package com.sun.xml.fastinfoset.stax;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=groovy.lang))' extend='false' multiple='false' optional='true'>Import package groovy.lang;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=groovy.xml))' extend='false' multiple='false' optional='true'>Import package groovy.xml;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.annotation))' extend='false' multiple='false' optional='true'>Import package javax.annotation;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.crypto))' extend='false' multiple='false' optional='true'>Import package javax.crypto;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.crypto.spec))' extend='false' multiple='false' optional='true'>Import package javax.crypto.spec;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.el))' extend='false' multiple='false' optional='true'>Import package javax.el;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.imageio))' extend='false' multiple='false' optional='true'>Import package javax.imageio;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.imageio.spi))' extend='false' multiple='false' optional='true'>Import package javax.imageio.spi;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.imageio.stream))' extend='false' multiple='false' optional='true'>Import package javax.imageio.stream;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.inject))' extend='false' multiple='false' optional='true'>Import package javax.inject;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.mail))' extend='false' multiple='false' optional='true'>Import package javax.mail;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.mail.internet))' extend='false' multiple='false' optional='true'>Import package javax.mail.internet;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.mail.util))' extend='false' multiple='false' optional='true'>Import package javax.mail.util;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.naming))' extend='false' multiple='false' optional='true'>Import package javax.naming;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.naming.directory))' extend='false' multiple='false' optional='true'>Import package javax.naming.directory;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.naming.ldap))' extend='false' multiple='false' optional='true'>Import package javax.naming.ldap;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.net))' extend='false' multiple='false' optional='true'>Import package javax.net;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.net.ssl))' extend='false' multiple='false' optional='true'>Import package javax.net.ssl;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.security.auth.x500))' extend='false' multiple='false' optional='true'>Import package javax.security.auth.x500;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.servlet))' extend='false' multiple='false' optional='true'>Import package javax.servlet;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.xml.datatype))' extend='false' multiple='false' optional='true'>Import package javax.xml.datatype;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.xml.parsers))' extend='false' multiple='false' optional='true'>Import package javax.xml.parsers;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform))' extend='false' multiple='false' optional='true'>Import package javax.xml.transform;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform.dom))' extend='false' multiple='false' optional='true'>Import package javax.xml.transform.dom;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform.sax))' extend='false' multiple='false' optional='true'>Import package javax.xml.transform.sax;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform.stax))' extend='false' multiple='false' optional='true'>Import package javax.xml.transform.stax;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform.stream))' extend='false' multiple='false' optional='true'>Import package javax.xml.transform.stream;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.xml.validation))' extend='false' multiple='false' optional='true'>Import package javax.xml.validation;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=joptsimple))' extend='false' multiple='false' optional='true'>Import package joptsimple;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=net.jcip.annotations))' extend='false' multiple='false' optional='true'>Import package net.jcip.annotations;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=net.sf.ehcache))' extend='false' multiple='false' optional='true'>Import package net.sf.ehcache;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=net.spy.memcached))' extend='false' multiple='false' optional='true'>Import package net.spy.memcached;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.apache.avalon.framework.logger))' extend='false' multiple='false' optional='true'>Import package org.apache.avalon.framework.logger;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.apache.log))' extend='false' multiple='false' optional='true'>Import package org.apache.log;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.apache.log4j))' extend='false' multiple='false' optional='true'>Import package org.apache.log4j;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.apache.log4j.xml))' extend='false' multiple='false' optional='true'>Import package org.apache.log4j.xml;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.apache.tools.ant))' extend='false' multiple='false' optional='true'>Import package org.apache.tools.ant;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.apache.tools.ant.types))' extend='false' multiple='false' optional='true'>Import package org.apache.tools.ant.types;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.aspectj.bridge))' extend='false' multiple='false' optional='true'>Import package org.aspectj.bridge;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.aspectj.weaver))' extend='false' multiple='false' optional='true'>Import package org.aspectj.weaver;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.aspectj.weaver.bcel))' extend='false' multiple='false' optional='true'>Import package org.aspectj.weaver.bcel;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.aspectj.weaver.patterns))' extend='false' multiple='false' optional='true'>Import package org.aspectj.weaver.patterns;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.codehaus.groovy.reflection))' extend='false' multiple='false' optional='true'>Import package org.codehaus.groovy.reflection;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.codehaus.groovy.runtime))' extend='false' multiple='false' optional='true'>Import package org.codehaus.groovy.runtime;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.codehaus.groovy.runtime.callsite))' extend='false' multiple='false' optional='true'>Import package org.codehaus.groovy.runtime.callsite;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.codehaus.groovy.runtime.typehandling))' extend='false' multiple='false' optional='true'>Import package org.codehaus.groovy.runtime.typehandling;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.ietf.jgss))' extend='false' multiple='false' optional='true'>Import package org.ietf.jgss;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.joda.convert))' extend='false' multiple='false' optional='true'>Import package org.joda.convert;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.jvnet.fastinfoset))' extend='false' multiple='false' optional='true'>Import package org.jvnet.fastinfoset;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.jvnet.staxex))' extend='false' multiple='false' optional='true'>Import package org.jvnet.staxex;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework))' extend='false' multiple='false' optional='true'>Import package org.osgi.framework;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.slf4j.impl))' extend='false' multiple='false' optional='true'>Import package org.slf4j.impl;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.springframework.aop.support))' extend='false' multiple='false' optional='true'>Import package org.springframework.aop.support;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.springframework.context))' extend='false' multiple='false' optional='true'>Import package org.springframework.context;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.annotation))' extend='false' multiple='false' optional='true'>Import package org.springframework.context.annotation;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.event))' extend='false' multiple='false' optional='true'>Import package org.springframework.context.event;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.springframework.stereotype))' extend='false' multiple='false' optional='true'>Import package org.springframework.stereotype;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.w3c.dom))' extend='false' multiple='false' optional='true'>Import package org.w3c.dom;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.w3c.dom.bootstrap))' extend='false' multiple='false' optional='true'>Import package org.w3c.dom.bootstrap;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.w3c.dom.ls))' extend='false' multiple='false' optional='true'>Import package org.w3c.dom.ls;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.xml.sax))' extend='false' multiple='false' optional='true'>Import package org.xml.sax;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.xml.sax.ext))' extend='false' multiple='false' optional='true'>Import package org.xml.sax.ext;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.xml.sax.helpers))' extend='false' multiple='false' optional='true'>Import package org.xml.sax.helpers;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.yaml.snakeyaml))' extend='false' multiple='false' optional='true'>Import package org.yaml.snakeyaml;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.yaml.snakeyaml.constructor))' extend='false' multiple='false' optional='true'>Import package org.yaml.snakeyaml.constructor;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.yaml.snakeyaml.error))' extend='false' multiple='false' optional='true'>Import package org.yaml.snakeyaml.error;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.yaml.snakeyaml.nodes))' extend='false' multiple='false' optional='true'>Import package org.yaml.snakeyaml.nodes;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.yaml.snakeyaml.parser))' extend='false' multiple='false' optional='true'>Import package org.yaml.snakeyaml.parser;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.yaml.snakeyaml.reader))' extend='false' multiple='false' optional='true'>Import package org.yaml.snakeyaml.reader;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=sun.misc))' extend='false' multiple='false' optional='true'>Import package sun.misc;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.plugin.webfragment.conditions))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.plugin.webfragment.conditions</require>
  </resource>
</repository>